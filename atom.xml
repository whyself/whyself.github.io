<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://whyself.github.io</id>
    <title>why&apos;s blog</title>
    <updated>2020-02-28T04:11:30.827Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://whyself.github.io"/>
    <link rel="self" href="https://whyself.github.io/atom.xml"/>
    <logo>https://whyself.github.io/images/avatar.png</logo>
    <icon>https://whyself.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, why&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[luogu 题解 P1190 【接水问题】]]></title>
        <id>https://whyself.github.io/post/luogu-ti-jie-p1190-jie-shui-wen-ti/</id>
        <link href="https://whyself.github.io/post/luogu-ti-jie-p1190-jie-shui-wen-ti/">
        </link>
        <updated>2020-02-27T05:45:58.000Z</updated>
        <content type="html"><![CDATA[<h1 id="优先队列">优先队列</h1>
<p>首先，阐述一下发题解的原因：</p>
<p>虽然有跟我用同种思路的题解，</p>
<p>但是我看不懂……（？？）</p>
<hr>
<p>进入正题，</p>
<p>我们知道题意说是一个人打完水后按序号接上打；</p>
<p>那么我们也要尊重一下模拟的核心思想：</p>
<h1 id="模拟">模拟</h1>
<p>当然优先队列的好处就是，</p>
<p>它可以告诉你：当前时间节点，剩余打水量最少的人</p>
<p>剩余打水量为零的肯定在最前面</p>
<p>如果剩余打水量为零</p>
<p>就可以换人了</p>
<p>代码实现：</p>
<pre><code class="language-cpp">while(!q.empty()&amp;&amp;q.top()==t)//empty()是判断队列是否为空，top（）是访问剩余打水量最少的人的编号
{
	q.pop();\\弹出已装满水的人
	if(num&lt;n) q.push(w[++num]+t);//推入下一个编号的人
}
</code></pre>
<p>当然这里要注意！！！</p>
<p>一定要记得在推入的人的水的需求量上加上当前时间；</p>
<p>因为我们比较的是它的值与当前时间</p>
<p>为了不再加一个记录它入队的时间的变量</p>
<p>所以我们将它所需求的水量加上入队的时间再入队</p>
<p>下面是完整代码：</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
priority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt; q;//将默认优先级从大到小定义为总时间短的优先
int n,m,w[10086],t,num;
int main()
{
	scanf(&quot;%d%d&quot;,&amp;n,&amp;m);
	for(int i=1;i&lt;=n;i++)
	{
		scanf(&quot;%d&quot;,&amp;w[i]);
		if(i&lt;=m) 
			q.push(w[i]);
	}
	num=min(n,m);//坑点！一开始被推入的个数要么不够挤满水龙头（n）要么挤满了水龙头（m），等同于在if语句中加num++
	while(!q.empty())
	{
		t++;
		while(!q.empty()&amp;&amp;q.top()==t)
		{
			q.pop();
			if(num&lt;n) q.push(w[++num]+t);
		}
	}
	printf(&quot;%d\n&quot;,t);
	return 0;
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[luogu 题解 P1725 【琪露诺】]]></title>
        <id>https://whyself.github.io/post/luogu-ti-jie-p1725-qi-lu-nuo/</id>
        <link href="https://whyself.github.io/post/luogu-ti-jie-p1725-qi-lu-nuo/">
        </link>
        <updated>2020-02-27T05:43:15.000Z</updated>
        <content type="html"><![CDATA[<p>PS：本篇题解适用于别的题解看不懂的萌新们，如有错误请指出。</p>
<p>看完题面不少同学，一下子没了思路，这篇题解将会把我的思考过程讲述给你们听，让你们<s>恍然大悟、豁然开朗（此处省略10086字）</s></p>
<p>不太懂如何解题的同学们试着将题面中的区间 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>i</mi><mo>+</mo><mi>l</mi><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mi>r</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[i+l,i+r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span> 更换成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>i</mi><mo>+</mo><mi>x</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[i+x]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mclose">]</span></span></span></span> 那么这道题就只有普及-的难度了，一道比较基础的 DP 了。我们可以得到状态转移方程：</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo>−</mo><mi>x</mi></mrow></msub><mo>+</mo><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">dp_i=dp_{i-x}+v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>（其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 代表的是第 i 个数的权值）</p>
<p>这样我们就可以写出简化版的关键循环代码：</p>
<pre><code class="language-cpp">for(int i=x;i&lt;=n;i++)//从x开始,前面的格子跳不到
{
	dp[i]=dp[i-x]+v[i]; 
	if(i+x&gt;n) //判断下一步是否直接跳到岸上
		ans=max(dp[i],ans);//记录最优答案
}
</code></pre>
<p>当然这里有一个“坑”（至少我这么认为），那就是编号小于 x 的  dp 值全部为零因为是从零开始跳，零跳不到的永远不可能被跳到或从这跳出去。</p>
<p>我们现在再回到原问题上，原问题仅仅是将第 i 个格子下一步可以跳到第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>x</mi><mo>+</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[x+i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span> 个格子上改成了可以跳到区间 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>i</mi><mo>+</mo><mi>l</mi><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mi>r</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[i+l,i+r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span> 的任意格子上，为了求出最优解，转移方程也就变成了：</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo>(</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo>−</mo><mi>r</mi></mrow></msub><mo separator="true">,</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo>−</mo><mi>r</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo>−</mo><mi>r</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>…</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo>−</mo><mi>l</mi></mrow></msub><mo>)</mo><mo>+</mo><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">dp_i=max(dp_{i-r},dp_{i-r+1},dp_{i-r+2}\ldots dp_{i-l})+v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>这里再解释一下：因为当前节点的 dp 值是由之前节点的 dp 值决定的，所以第 i 个格子可以跳到 区间 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>i</mi><mo>+</mo><mi>l</mi><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mi>r</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[i+l,i+r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span> 的任意格子上也就变成了第 i 个格子可以由 区间 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>i</mi><mo>−</mo><mi>r</mi><mo separator="true">,</mo><mi>i</mi><mo>−</mo><mi>l</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[i-r,i-l]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mclose">]</span></span></span></span> 的任意格子跳到。</p>
<p>现在解决方案就非常明了了，我们只需要在每次循环中求出一个<strong>定长区间最值</strong>，这里方法有很多，推荐选择的是<a href="https://www.luogu.com.cn/problem/P1886">单调队列</a>。</p>
<p>我们来看样例数据：</p>
<p>5 2 3</p>
<p>0 12 3 11 7 -2</p>
<p>队列里一开始为空，我们模拟一下队列：</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mi>l</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">i=l=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 时 [ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="red"><mtext>0</mtext></mstyle></mrow><annotation encoding="application/x-tex">\color{red}\text{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord text" style="color:red;"><span class="mord" style="color:red;">0</span></span></span></span></span> ] 0 0 0 0 0</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">i=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 时 [ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="red"><mtext>0</mtext></mstyle></mrow><annotation encoding="application/x-tex">\color{red}\text{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord text" style="color:red;"><span class="mord" style="color:red;">0</span></span></span></span></span> 0 ] 3 0 0 0</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">i=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span> 时 0 [ 0 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="red"><mtext>3</mtext></mstyle></mrow><annotation encoding="application/x-tex">\color{red}\text{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord text" style="color:red;"><span class="mord" style="color:red;">3</span></span></span></span></span> ] 11 0 0，但 0 比 3  老还比 3 弱所以 0 被弹出，队列应为 0 [ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="yellow"><mtext>0</mtext></mstyle></mrow><annotation encoding="application/x-tex">\color{yellow}\text{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord text" style="color:yellow;"><span class="mord" style="color:yellow;">0</span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="red"><mtext>3</mtext></mstyle></mrow><annotation encoding="application/x-tex">\color{red}\text{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord text" style="color:red;"><span class="mord" style="color:red;">3</span></span></span></span></span> ] 11 0 0</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">i=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span> 时 同理为 0 0 [ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="yellow"><mtext>3</mtext></mstyle></mrow><annotation encoding="application/x-tex">\color{yellow}\text{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord text" style="color:yellow;"><span class="mord" style="color:yellow;">3</span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="red"><mtext>11</mtext></mstyle></mrow><annotation encoding="application/x-tex">\color{red}\text{11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord text" style="color:red;"><span class="mord" style="color:red;">11</span></span></span></span></span> ] 11 0 0</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">i=6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span> 时 同理为 0 0 3 [ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="red"><mtext>11</mtext></mstyle></mrow><annotation encoding="application/x-tex">\color{red}\text{11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord text" style="color:red;"><span class="mord" style="color:red;">11</span></span></span></span></span> 11 ] 9</p>
<p>最后的 dp 数组为 0 0 3 11 11 9 很显然最大值是 11 。</p>
<p>PS：这里队列里存的是 dp 数组中对应的值，但实际为了判别是否在当前区间内，队列中存的应是编号。</p>
<p>关键代码：</p>
<pre><code class="language-cpp">for(int i=l;i&lt;=n;i++)//从l开始，前面的格子跳不到
{
	while(h&lt;=t&amp;&amp;dq[h]&lt;i-r) h++;//删去队首不在区间内的数
	while(h&lt;=t&amp;&amp;dp[dq[t]]&lt;dp[i-l]) t--;//删去队尾比新数小的数
	dq[++t]=i-l;//推入编号为 i-l 的数
	dp[i]=dp[dq[h]]+v[i];当前的 dp 值为区间最大值加上自己的权值
	if(i+r&gt;n) 
		ans=max(dp[i],ans);//如果这个数下一步可以跳出的话，记录最优值
}
</code></pre>
<p>大家明白了吗？接下来就是完整的代码：（不要 copy 哟~~~）</p>
<pre><code class="language-cpp">#include&lt;stdio.h&gt;
#include&lt;algorithm&gt;
using namespace std;

const int N=2e5+86;

int n,dp[N],l,r,ans=-0x3f3f3f3f,v[N],dq[N],h=1,t=0;
//有负数所以 ans 初始化为负无穷
int main()
{
	scanf(&quot;%d%d%d&quot;,&amp;n,&amp;l,&amp;r);
	if(l&gt;r) swap(l,r); //鲁棒性
	for(int i=0;i&lt;=n;i++)
		scanf(&quot;%d&quot;,&amp;v[i]);
	for(int i=l;i&lt;=n;i++)
	{
		while(h&lt;=t&amp;&amp;dq[h]&lt;i-r) h++;
		while(h&lt;=t&amp;&amp;dp[dq[t]]&lt;dp[i-l]) t--;
		dq[++t]=i-l;
		dp[i]=dp[dq[h]]+v[i];
		if(i+r&gt;n) 
			ans=max(dp[i],ans);
	}
	printf(&quot;%d\n&quot;,ans);
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[综合性学习——新型冠状病毒肺炎探究]]></title>
        <id>https://whyself.github.io/post/zong-he-xing-xue-xi-xin-xing-guan-zhuang-bing-du-fei-yan-tan-jiu/</id>
        <link href="https://whyself.github.io/post/zong-he-xing-xue-xi-xin-xing-guan-zhuang-bing-du-fei-yan-tan-jiu/">
        </link>
        <updated>2020-02-27T01:59:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="一-疫情发展时间线综合人民网新京报网整理">一、疫情发展时间线（综合人民网，新京报网整理）</h3>
<p>• 2019年12月30日 武汉市卫健委发布《关于做好不明原因肺炎救治工作的紧急通知》</p>
<p>• 2020年1月1日 华南海鲜市场休市</p>
<p>• 2020年1月8日 国家卫健委组织力量初步确认新型冠状病毒为此次疫情的病原</p>
<p>• 2020年1月19日 广东确诊全国首例输入性病例</p>
<p>• 2020年1月21日 新增全国十省确诊首例病例</p>
<p>• 2020年1月22日 新增全国十一省与两个特别行政区确诊首例病例</p>
<p>• 2020年1月23日 武汉封城，开建火神山医院</p>
<p>• 2020年1月24日 发现“不典型”病例</p>
<p>• 2020年1月27日 李克强受总书记委托到武汉</p>
<p>• 2020年2月2日 火神山医院交付</p>
<p>• 2020年2月5日 疫情达到迄今最高点</p>
<p>• 2020年2月7日 李文亮医生去世</p>
<p>• 2020年2月8日 雷神山医院交付</p>
<p>• 2020年2月14日 武汉新增确诊和疑似病例在2月13日之后步入下降趋势</p>
<p>• 2020年2月15日 部分疫苗进入动物实验阶段</p>
<p>• 2020年2月20日 湖北省新增确诊数少于武汉</p>
<h3 id="二-全国疫情形势表1月26日至2月25日来源于百度">二、全国疫情形势表（1月26日至2月25日来源于百度）</h3>
<figure data-type="image" tabindex="1"><img src="https://s2.ax1x.com/2020/02/27/3dA1w8.png" alt="" loading="lazy"></figure>
<h3 id="三-探究结果">三、探究结果</h3>
<p>1、非湖北地区，疫情形势平缓无大爆发现象。</p>
<p>2、总体疫情在雷神山医院交付后回落，基本可以判断几乎所有的防疫工作在2月14日得到部署。</p>
<p>3、在确证病例到达最高点后，迅速的回落足以看出我国防疫战略十分有效的控制住了疫情。</p>
]]></content>
    </entry>
</feed>